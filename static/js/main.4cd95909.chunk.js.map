{"version":3,"sources":["Custom/Button/Button.jsx","Custom/Header/Header.jsx","View/Home/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["Button","content","className","Header","id","for","href","type","Home","class","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iTAGe,SAASA,EAAT,GAA4B,IAAXC,EAAU,EAAVA,QAC5B,OACA,4BAAQC,UAAU,cAAcD,G,4CCDrB,SAASE,IACpB,OACI,6BACI,yBAAKD,UAAU,UACX,2BAAOA,UAAU,gBAAgBE,GAAG,mBAAmBC,IAAI,aACvD,uBAAGH,UAAU,gBAEjB,uBAAGI,KAAK,KAAKJ,UAAU,QAAvB,WACA,wBAAIA,UAAU,WAAWE,GAAG,WACxB,4BACI,uBAAGE,KAAK,KAAKJ,UAAU,aAAvB,SAEJ,4BACI,uBAAGI,KAAK,KAAKJ,UAAU,aAAvB,aAEJ,4BACI,uBAAGI,KAAK,KAAKJ,UAAU,aAAvB,eAEJ,4BACI,uBAAGI,KAAK,KAAKJ,UAAU,aAAvB,cAEJ,sCACA,4BACA,uBAAGI,KAAK,KAAKJ,UAAU,aAAY,kBAAC,EAAD,CAAQK,KAAK,UAAUN,QAAQ,wBCvB/E,IAgCQO,EAhCf,uKAGQ,OACI,6BACI,kBAAC,EAAD,MACA,yBAAKN,UAAU,aAAf,cACA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,cACX,4BACI,4BAAI,uBAAGI,KAAK,KAAR,gBACJ,4BAAI,uBAAGA,KAAK,KAAR,iBACJ,4BAAI,uBAAGA,KAAK,KAAR,uBACJ,4BAAI,uBAAGA,KAAK,KAAR,oBACJ,4BAAI,uBAAGA,KAAK,KAAR,sBACJ,4BAAI,uBAAGA,KAAK,KAAR,sBACJ,4BAAI,uBAAGA,KAAK,KAAR,YACJ,4BAAI,uBAAGA,KAAK,KAAR,iBAGZ,yBAAKG,MAAM,oCAC5B,4BAAQA,MAAM,gBACX,wBAAIA,MAAM,eAAV,+BACA,wBAAIA,MAAM,kBAAV,gDAvBN,GAA0BC,aCSXC,MARf,WACE,OACE,yBAAKT,UAAU,OACb,kBAAC,EAAD,QCIcU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4cd95909.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./Button.scss\"\r\n\r\nexport default function Button({content}) {\r\n    return (\r\n    <button className=\" btn first\">{content}</button>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./Header.scss\"\r\nimport Button from '../Button/Button'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar\">\r\n                <label className=\"navbar-toggle\" id=\"js-navbar-toggle\" for=\"chkToggle\">\r\n                    <i className=\"fa fa-bars\"></i>\r\n                </label>\r\n                <a href=\"/#\" className=\"logo\">Geetico</a>\r\n                <ul className=\"main-nav\" id=\"js-menu\">\r\n                    <li>\r\n                        <a href=\"/#\" className=\"nav-links\">Home</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"/#\" className=\"nav-links\">Products</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"/#\" className=\"nav-links\">Search Bar</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"/#\" className=\"nav-links\">Cart Icon</a>\r\n                    </li>\r\n                    <span>&nbsp;</span>\r\n                    <li>\r\n                    <a href=\"/#\" className=\"nav-links\"><Button type=\"primary\" content=\"Login/Register\" /></a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"./Home.scss\"\r\nimport Header from \"../../Custom/Header/Header\"\r\n\r\nexport class Home extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <div className=\"somestuff\">SOME STUFF</div>\r\n                <div className=\"headerSlider\">\r\n                    <div className=\"categories\">\r\n                        <ul>\r\n                            <li><a href=\"/\">Top Sellers</a></li>\r\n                            <li><a href=\"/\">New Arrivals</a></li>\r\n                            <li><a href=\"/\">Baking Ingredients</a></li>\r\n                            <li><a href=\"/\">Cake Decoration</a></li>\r\n                            <li><a href=\"/\">Frosting & Design</a></li>\r\n                            <li><a href=\"/\">Equipment & Tools</a></li>\r\n                            <li><a href=\"/\">Cooking</a></li>\r\n                            <li><a href=\"/\">Appliances</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"masthead responsive-image slider\">\r\n   <header class=\"entry-header\">\r\n      <h1 class=\"entry-title\">Heading Spaced with padding</h1>\r\n      <h2 class=\"entry-subtitle\">Some sort of lovely supporting title</h2>\r\n    </header>\r\n  </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\nimport './App.scss';\nimport Button from './Custom/Button/Button';\nimport Home from './View/Home/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}